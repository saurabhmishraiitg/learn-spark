{
  "paragraphs": [
    {
      "text": "import org.apache.spark.sql.types._\nvar irisSchema = StructType(Array (\n    StructField(\"sepal_length\",   DoubleType, true),\n    StructField(\"sepal_width\",   DoubleType, true),\n    StructField(\"petal_length\",   DoubleType, true),\n    StructField(\"petal_width\",   DoubleType, true),\n    StructField(\"class\",  StringType, true)\n    ))\n    \n// Read the CSV file. Use the schema that we just defined.\nval dataDF = spark.read.format(\"csv\")\n             .option(\"header\",\"false\")\n             .schema(irisSchema)\n             .load(\"/Users/pranabh/spark-lab/datasets/iris.data\")",
      "user": "anonymous",
      "dateUpdated": "2020-05-26T14:29:15+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import org.apache.spark.sql.types._\n\u001b[1m\u001b[34mirisSchema\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.types.StructType\u001b[0m = StructType(StructField(sepal_length,DoubleType,true), StructField(sepal_width,DoubleType,true), StructField(petal_length,DoubleType,true), StructField(petal_width,DoubleType,true), StructField(class,StringType,true))\n\u001b[1m\u001b[34mdataDF\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [sepal_length: double, sepal_width: double ... 3 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590482611128_-1193040975",
      "id": "paragraph_1590482611128_-1193040975",
      "dateCreated": "2020-05-26T14:13:31+0530",
      "dateStarted": "2020-05-26T14:29:15+0530",
      "dateFinished": "2020-05-26T14:29:15+0530",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:47175"
    },
    {
      "text": "// Check the schema.\ndataDF.printSchema",
      "user": "anonymous",
      "dateUpdated": "2020-05-26T14:29:15+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- sepal_length: double (nullable = true)\n |-- sepal_width: double (nullable = true)\n |-- petal_length: double (nullable = true)\n |-- petal_width: double (nullable = true)\n |-- class: string (nullable = true)\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590482681931_-989821489",
      "id": "paragraph_1590482681931_-989821489",
      "dateCreated": "2020-05-26T14:14:41+0530",
      "dateStarted": "2020-05-26T14:29:15+0530",
      "dateFinished": "2020-05-26T14:29:15+0530",
      "status": "FINISHED",
      "$$hashKey": "object:47176"
    },
    {
      "text": "dataDF.show",
      "user": "anonymous",
      "dateUpdated": "2020-05-26T14:29:15+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+------------+-----------+------------+-----------+-----------+\n|sepal_length|sepal_width|petal_length|petal_width|      class|\n+------------+-----------+------------+-----------+-----------+\n|         5.1|        3.5|         1.4|        0.2|Iris-setosa|\n|         4.9|        3.0|         1.4|        0.2|Iris-setosa|\n|         4.7|        3.2|         1.3|        0.2|Iris-setosa|\n|         4.6|        3.1|         1.5|        0.2|Iris-setosa|\n|         5.0|        3.6|         1.4|        0.2|Iris-setosa|\n|         5.4|        3.9|         1.7|        0.4|Iris-setosa|\n|         4.6|        3.4|         1.4|        0.3|Iris-setosa|\n|         5.0|        3.4|         1.5|        0.2|Iris-setosa|\n|         4.4|        2.9|         1.4|        0.2|Iris-setosa|\n|         4.9|        3.1|         1.5|        0.1|Iris-setosa|\n|         5.4|        3.7|         1.5|        0.2|Iris-setosa|\n|         4.8|        3.4|         1.6|        0.2|Iris-setosa|\n|         4.8|        3.0|         1.4|        0.1|Iris-setosa|\n|         4.3|        3.0|         1.1|        0.1|Iris-setosa|\n|         5.8|        4.0|         1.2|        0.2|Iris-setosa|\n|         5.7|        4.4|         1.5|        0.4|Iris-setosa|\n|         5.4|        3.9|         1.3|        0.4|Iris-setosa|\n|         5.1|        3.5|         1.4|        0.3|Iris-setosa|\n|         5.7|        3.8|         1.7|        0.3|Iris-setosa|\n|         5.1|        3.8|         1.5|        0.3|Iris-setosa|\n+------------+-----------+------------+-----------+-----------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590482739708_-527432722",
      "id": "paragraph_1590482739708_-527432722",
      "dateCreated": "2020-05-26T14:15:39+0530",
      "dateStarted": "2020-05-26T14:29:15+0530",
      "dateFinished": "2020-05-26T14:29:16+0530",
      "status": "FINISHED",
      "$$hashKey": "object:47177"
    },
    {
      "text": "// Calculate summary statistics for our data. This can\n// be helpful in understanding the distribution of your data.\ndataDF.describe().show(5,15)",
      "user": "anonymous",
      "dateUpdated": "2020-05-26T14:29:16+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+---------------+---------------+---------------+---------------+--------------+\n|summary|   sepal_length|    sepal_width|   petal_length|    petal_width|         class|\n+-------+---------------+---------------+---------------+---------------+--------------+\n|  count|            150|            150|            150|            150|           150|\n|   mean|5.8433333333...|3.0540000000...|3.7586666666...|1.1986666666...|          null|\n| stddev|0.8280661279...|0.4335943113...|1.7644204199...|0.7631607417...|          null|\n|    min|            4.3|            2.0|            1.0|            0.1|   Iris-setosa|\n|    max|            7.9|            4.4|            6.9|            2.5|Iris-virginica|\n+-------+---------------+---------------+---------------+---------------+--------------+\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590482742126_-1919504883",
      "id": "paragraph_1590482742126_-1919504883",
      "dateCreated": "2020-05-26T14:15:42+0530",
      "dateStarted": "2020-05-26T14:29:16+0530",
      "dateFinished": "2020-05-26T14:29:16+0530",
      "status": "FINISHED",
      "$$hashKey": "object:47178"
    },
    {
      "text": "// The input column class is currently a string. We'll use\n// StringIndexer to encode it into a double. The new value\n// will be stored in the new output column called label.\nimport org.apache.spark.ml.feature.StringIndexer\nval labelIndexer = new StringIndexer()\n                  .setInputCol(\"class\")\n                  .setOutputCol(\"label\")",
      "user": "anonymous",
      "dateUpdated": "2020-05-26T14:29:16+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import org.apache.spark.ml.feature.StringIndexer\n\u001b[1m\u001b[34mlabelIndexer\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.feature.StringIndexer\u001b[0m = strIdx_843117fb2c65\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590482761313_-1100913407",
      "id": "paragraph_1590482761313_-1100913407",
      "dateCreated": "2020-05-26T14:16:01+0530",
      "dateStarted": "2020-05-26T14:29:16+0530",
      "dateFinished": "2020-05-26T14:29:16+0530",
      "status": "FINISHED",
      "$$hashKey": "object:47179"
    },
    {
      "text": "val dataDF2 = labelIndexer\n             .fit(dataDF)\n             .transform(dataDF)\ndataDF2.printSchema",
      "user": "anonymous",
      "dateUpdated": "2020-05-26T14:29:16+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- sepal_length: double (nullable = true)\n |-- sepal_width: double (nullable = true)\n |-- petal_length: double (nullable = true)\n |-- petal_width: double (nullable = true)\n |-- class: string (nullable = true)\n |-- label: double (nullable = false)\n\n\u001b[1m\u001b[34mdataDF2\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [sepal_length: double, sepal_width: double ... 4 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590482780926_422918787",
      "id": "paragraph_1590482780926_422918787",
      "dateCreated": "2020-05-26T14:16:20+0530",
      "dateStarted": "2020-05-26T14:29:16+0530",
      "dateFinished": "2020-05-26T14:29:17+0530",
      "status": "FINISHED",
      "$$hashKey": "object:47180"
    },
    {
      "text": "// Inspect the new column added to the DataFrame.\ndataDF2.show",
      "user": "anonymous",
      "dateUpdated": "2020-05-26T14:29:17+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+------------+-----------+------------+-----------+-----------+-----+\n|sepal_length|sepal_width|petal_length|petal_width|      class|label|\n+------------+-----------+------------+-----------+-----------+-----+\n|         5.1|        3.5|         1.4|        0.2|Iris-setosa|  0.0|\n|         4.9|        3.0|         1.4|        0.2|Iris-setosa|  0.0|\n|         4.7|        3.2|         1.3|        0.2|Iris-setosa|  0.0|\n|         4.6|        3.1|         1.5|        0.2|Iris-setosa|  0.0|\n|         5.0|        3.6|         1.4|        0.2|Iris-setosa|  0.0|\n|         5.4|        3.9|         1.7|        0.4|Iris-setosa|  0.0|\n|         4.6|        3.4|         1.4|        0.3|Iris-setosa|  0.0|\n|         5.0|        3.4|         1.5|        0.2|Iris-setosa|  0.0|\n|         4.4|        2.9|         1.4|        0.2|Iris-setosa|  0.0|\n|         4.9|        3.1|         1.5|        0.1|Iris-setosa|  0.0|\n|         5.4|        3.7|         1.5|        0.2|Iris-setosa|  0.0|\n|         4.8|        3.4|         1.6|        0.2|Iris-setosa|  0.0|\n|         4.8|        3.0|         1.4|        0.1|Iris-setosa|  0.0|\n|         4.3|        3.0|         1.1|        0.1|Iris-setosa|  0.0|\n|         5.8|        4.0|         1.2|        0.2|Iris-setosa|  0.0|\n|         5.7|        4.4|         1.5|        0.4|Iris-setosa|  0.0|\n|         5.4|        3.9|         1.3|        0.4|Iris-setosa|  0.0|\n|         5.1|        3.5|         1.4|        0.3|Iris-setosa|  0.0|\n|         5.7|        3.8|         1.7|        0.3|Iris-setosa|  0.0|\n|         5.1|        3.8|         1.5|        0.3|Iris-setosa|  0.0|\n+------------+-----------+------------+-----------+-----------+-----+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590482811243_420413443",
      "id": "paragraph_1590482811243_420413443",
      "dateCreated": "2020-05-26T14:16:51+0530",
      "dateStarted": "2020-05-26T14:29:17+0530",
      "dateFinished": "2020-05-26T14:29:17+0530",
      "status": "FINISHED",
      "$$hashKey": "object:47181"
    },
    {
      "text": "// Combine the features into a single vector\n// column using the VectorAssembler transformer.\nimport org.apache.spark.ml.feature.VectorAssembler\nval features = Array(\"sepal_length\",\"sepal_width\",\"petal_length\",\"petal_width\")\nval assembler = new VectorAssembler()\n                .setInputCols(features)\n                .setOutputCol(\"features\")\nval dataDF3 = assembler.transform(dataDF2)\n// Inspect the new column added to the DataFrame.\ndataDF3.printSchema",
      "user": "anonymous",
      "dateUpdated": "2020-05-26T14:29:17+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- sepal_length: double (nullable = true)\n |-- sepal_width: double (nullable = true)\n |-- petal_length: double (nullable = true)\n |-- petal_width: double (nullable = true)\n |-- class: string (nullable = true)\n |-- label: double (nullable = false)\n |-- features: vector (nullable = true)\n\nimport org.apache.spark.ml.feature.VectorAssembler\n\u001b[1m\u001b[34mfeatures\u001b[0m: \u001b[1m\u001b[32mArray[String]\u001b[0m = Array(sepal_length, sepal_width, petal_length, petal_width)\n\u001b[1m\u001b[34massembler\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.feature.VectorAssembler\u001b[0m = vecAssembler_5e98e080abe0\n\u001b[1m\u001b[34mdataDF3\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [sepal_length: double, sepal_width: double ... 5 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590482826700_-48997094",
      "id": "paragraph_1590482826700_-48997094",
      "dateCreated": "2020-05-26T14:17:06+0530",
      "dateStarted": "2020-05-26T14:29:17+0530",
      "dateFinished": "2020-05-26T14:29:17+0530",
      "status": "FINISHED",
      "$$hashKey": "object:47182"
    },
    {
      "text": "dataDF3.show",
      "user": "anonymous",
      "dateUpdated": "2020-05-26T14:29:17+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+------------+-----------+------------+-----------+-----------+-----+-----------------+\n|sepal_length|sepal_width|petal_length|petal_width|      class|label|         features|\n+------------+-----------+------------+-----------+-----------+-----+-----------------+\n|         5.1|        3.5|         1.4|        0.2|Iris-setosa|  0.0|[5.1,3.5,1.4,0.2]|\n|         4.9|        3.0|         1.4|        0.2|Iris-setosa|  0.0|[4.9,3.0,1.4,0.2]|\n|         4.7|        3.2|         1.3|        0.2|Iris-setosa|  0.0|[4.7,3.2,1.3,0.2]|\n|         4.6|        3.1|         1.5|        0.2|Iris-setosa|  0.0|[4.6,3.1,1.5,0.2]|\n|         5.0|        3.6|         1.4|        0.2|Iris-setosa|  0.0|[5.0,3.6,1.4,0.2]|\n|         5.4|        3.9|         1.7|        0.4|Iris-setosa|  0.0|[5.4,3.9,1.7,0.4]|\n|         4.6|        3.4|         1.4|        0.3|Iris-setosa|  0.0|[4.6,3.4,1.4,0.3]|\n|         5.0|        3.4|         1.5|        0.2|Iris-setosa|  0.0|[5.0,3.4,1.5,0.2]|\n|         4.4|        2.9|         1.4|        0.2|Iris-setosa|  0.0|[4.4,2.9,1.4,0.2]|\n|         4.9|        3.1|         1.5|        0.1|Iris-setosa|  0.0|[4.9,3.1,1.5,0.1]|\n|         5.4|        3.7|         1.5|        0.2|Iris-setosa|  0.0|[5.4,3.7,1.5,0.2]|\n|         4.8|        3.4|         1.6|        0.2|Iris-setosa|  0.0|[4.8,3.4,1.6,0.2]|\n|         4.8|        3.0|         1.4|        0.1|Iris-setosa|  0.0|[4.8,3.0,1.4,0.1]|\n|         4.3|        3.0|         1.1|        0.1|Iris-setosa|  0.0|[4.3,3.0,1.1,0.1]|\n|         5.8|        4.0|         1.2|        0.2|Iris-setosa|  0.0|[5.8,4.0,1.2,0.2]|\n|         5.7|        4.4|         1.5|        0.4|Iris-setosa|  0.0|[5.7,4.4,1.5,0.4]|\n|         5.4|        3.9|         1.3|        0.4|Iris-setosa|  0.0|[5.4,3.9,1.3,0.4]|\n|         5.1|        3.5|         1.4|        0.3|Iris-setosa|  0.0|[5.1,3.5,1.4,0.3]|\n|         5.7|        3.8|         1.7|        0.3|Iris-setosa|  0.0|[5.7,3.8,1.7,0.3]|\n|         5.1|        3.8|         1.5|        0.3|Iris-setosa|  0.0|[5.1,3.8,1.5,0.3]|\n+------------+-----------+------------+-----------+-----------+-----+-----------------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590482852993_-1672213006",
      "id": "paragraph_1590482852993_-1672213006",
      "dateCreated": "2020-05-26T14:17:32+0530",
      "dateStarted": "2020-05-26T14:29:17+0530",
      "dateFinished": "2020-05-26T14:29:17+0530",
      "status": "FINISHED",
      "$$hashKey": "object:47183"
    },
    {
      "text": "// Let's measure the statistical dependence between\n// the features and the class using Pearson correlation.\nprintln(dataDF3.stat.corr(\"petal_length\",\"label\"))\nprintln(dataDF3.stat.corr(\"petal_width\",\"label\"))\nprintln(dataDF3.stat.corr(\"sepal_length\",\"label\"))\nprintln(dataDF3.stat.corr(\"sepal_width\",\"label\"))\n// The petal_length and petal_width have extremely high class correlation,\n// while sepal_length and sepal_width have low class correlation.\n// correlation evaluates how strong the linear\n// relationship between two variables. You can use correlation to select\n// relevant features (feature-class correlation) and identify redundant\n// features (intra-feature correlation).",
      "user": "anonymous",
      "dateUpdated": "2020-05-26T14:29:17+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "0.9490425448523336\n0.9564638238016178\n0.7825612318100821\n-0.41944620026002677\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590482866330_-770798582",
      "id": "paragraph_1590482866330_-770798582",
      "dateCreated": "2020-05-26T14:17:46+0530",
      "dateStarted": "2020-05-26T14:29:17+0530",
      "dateFinished": "2020-05-26T14:29:18+0530",
      "status": "FINISHED",
      "$$hashKey": "object:47184"
    },
    {
      "text": "// Divide our dataset into training and test datasets.\nval seed = 1234\nval Array(trainingData, testData) = dataDF3.randomSplit(Array(0.8, 0.2), seed)\n// We can now fit a model on the training dataset\n// using logistic regression.\nimport org.apache.spark.ml.classification.LogisticRegression\nval lr = new LogisticRegression()\nprintln(lr.explainParams())\n\n",
      "user": "anonymous",
      "dateUpdated": "2020-05-26T14:29:18+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "aggregationDepth: suggested depth for treeAggregate (>= 2) (default: 2)\nelasticNetParam: the ElasticNet mixing parameter, in range [0, 1]. For alpha = 0, the penalty is an L2 penalty. For alpha = 1, it is an L1 penalty (default: 0.0)\nfamily: The name of family which is a description of the label distribution to be used in the model. Supported options: auto, binomial, multinomial. (default: auto)\nfeaturesCol: features column name (default: features)\nfitIntercept: whether to fit an intercept term (default: true)\nlabelCol: label column name (default: label)\nlowerBoundsOnCoefficients: The lower bounds on coefficients if fitting under bound constrained optimization. (undefined)\nlowerBoundsOnIntercepts: The lower bounds on intercepts if fitting under bound constrained optimization. (undefined)\nmaxIter: maximum number of iterations (>= 0) (default: 100)\npredictionCol: prediction column name (default: prediction)\nprobabilityCol: Column name for predicted class conditional probabilities. Note: Not all models output well-calibrated probability estimates! These probabilities should be treated as confidences, not precise probabilities (default: probability)\nrawPredictionCol: raw prediction (a.k.a. confidence) column name (default: rawPrediction)\nregParam: regularization parameter (>= 0) (default: 0.0)\nstandardization: whether to standardize the training features before fitting the model (default: true)\nthreshold: threshold in binary classification prediction, in range [0, 1] (default: 0.5)\nthresholds: Thresholds in multi-class classification to adjust the probability of predicting each class. Array must have length equal to the number of classes, with values > 0 excepting that at most one value may be 0. The class with largest value p/t is predicted, where p is the original probability of that class and t is the class's threshold (undefined)\ntol: the convergence tolerance for iterative algorithms (>= 0) (default: 1.0E-6)\nupperBoundsOnCoefficients: The upper bounds on coefficients if fitting under bound constrained optimization. (undefined)\nupperBoundsOnIntercepts: The upper bounds on intercepts if fitting under bound constrained optimization. (undefined)\nweightCol: weight column name. If this is not set or empty, we treat all instance weights as 1.0 (undefined)\n\u001b[1m\u001b[34mseed\u001b[0m: \u001b[1m\u001b[32mInt\u001b[0m = 1234\n\u001b[1m\u001b[34mtrainingData\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [sepal_length: double, sepal_width: double ... 5 more fields]\n\u001b[1m\u001b[34mtestData\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [sepal_length: double, sepal_width: double ... 5 more fields]\nimport org.apache.spark.ml.classification.LogisticRegression\n\u001b[1m\u001b[34mlr\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.classification.LogisticRegression\u001b[0m = logreg_9e105fb800ec\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590482889877_557555722",
      "id": "paragraph_1590482889877_557555722",
      "dateCreated": "2020-05-26T14:18:09+0530",
      "dateStarted": "2020-05-26T14:29:18+0530",
      "dateFinished": "2020-05-26T14:29:18+0530",
      "status": "FINISHED",
      "$$hashKey": "object:47185"
    },
    {
      "text": "// Train a model using our training dataset.\nval model = lr.fit(trainingData)\n// Predict on our test dataset.\nval predictions = model.transform(testData)\n// Note the new columns added to the DataFrame:\n// rawPrediction, probability, prediction.\npredictions.printSchema",
      "user": "anonymous",
      "dateUpdated": "2020-05-26T14:29:18+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- sepal_length: double (nullable = true)\n |-- sepal_width: double (nullable = true)\n |-- petal_length: double (nullable = true)\n |-- petal_width: double (nullable = true)\n |-- class: string (nullable = true)\n |-- label: double (nullable = false)\n |-- features: vector (nullable = true)\n |-- rawPrediction: vector (nullable = true)\n |-- probability: vector (nullable = true)\n |-- prediction: double (nullable = false)\n\n\u001b[1m\u001b[34mmodel\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.classification.LogisticRegressionModel\u001b[0m = LogisticRegressionModel: uid = logreg_9e105fb800ec, numClasses = 3, numFeatures = 4\n\u001b[1m\u001b[34mpredictions\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [sepal_length: double, sepal_width: double ... 8 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590483549550_669816870",
      "id": "paragraph_1590483549550_669816870",
      "dateCreated": "2020-05-26T14:29:09+0530",
      "dateStarted": "2020-05-26T14:29:18+0530",
      "dateFinished": "2020-05-26T14:29:20+0530",
      "status": "FINISHED",
      "$$hashKey": "object:47186"
    },
    {
      "text": "predictions.select(\"sepal_length\",\"sepal_width\",\n\"petal_length\",\"petal_width\",\"label\",\"prediction\").show",
      "user": "anonymous",
      "dateUpdated": "2020-05-26T14:29:20+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+------------+-----------+------------+-----------+-----+----------+\n|sepal_length|sepal_width|petal_length|petal_width|label|prediction|\n+------------+-----------+------------+-----------+-----+----------+\n|         4.3|        3.0|         1.1|        0.1|  0.0|       0.0|\n|         4.4|        2.9|         1.4|        0.2|  0.0|       0.0|\n|         4.4|        3.0|         1.3|        0.2|  0.0|       0.0|\n|         4.8|        3.1|         1.6|        0.2|  0.0|       0.0|\n|         5.0|        3.3|         1.4|        0.2|  0.0|       0.0|\n|         5.0|        3.4|         1.5|        0.2|  0.0|       0.0|\n|         5.0|        3.6|         1.4|        0.2|  0.0|       0.0|\n|         5.1|        3.4|         1.5|        0.2|  0.0|       0.0|\n|         5.2|        2.7|         3.9|        1.4|  1.0|       1.0|\n|         5.2|        4.1|         1.5|        0.1|  0.0|       0.0|\n|         5.3|        3.7|         1.5|        0.2|  0.0|       0.0|\n|         5.6|        2.9|         3.6|        1.3|  1.0|       1.0|\n|         5.8|        2.8|         5.1|        2.4|  2.0|       2.0|\n|         6.0|        2.2|         4.0|        1.0|  1.0|       1.0|\n|         6.0|        2.9|         4.5|        1.5|  1.0|       1.0|\n|         6.0|        3.4|         4.5|        1.6|  1.0|       1.0|\n|         6.2|        2.8|         4.8|        1.8|  2.0|       2.0|\n|         6.2|        2.9|         4.3|        1.3|  1.0|       1.0|\n|         6.3|        2.8|         5.1|        1.5|  2.0|       1.0|\n|         6.7|        3.1|         5.6|        2.4|  2.0|       2.0|\n+------------+-----------+------------+-----------+-----+----------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590483248276_-6271317",
      "id": "paragraph_1590483248276_-6271317",
      "dateCreated": "2020-05-26T14:24:08+0530",
      "dateStarted": "2020-05-26T14:29:20+0530",
      "dateFinished": "2020-05-26T14:29:20+0530",
      "status": "FINISHED",
      "$$hashKey": "object:47187"
    },
    {
      "text": "// Inspect the rawPrediction and probability columns.\npredictions.select(\"rawPrediction\",\"probability\",\"prediction\")\n           .show(false)",
      "user": "anonymous",
      "dateUpdated": "2020-05-26T14:29:20+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+------------------------------------------------------------+---------------------------------+----------+\n|rawPrediction                                               |probability                      |prediction|\n+------------------------------------------------------------+---------------------------------+----------+\n|[25678.50533964567,132.90650347045448,-25811.411843116126]  |[1.0,0.0,0.0]                    |0.0       |\n|[20141.806983153703,1877.784589255676,-22019.591572409383]  |[1.0,0.0,0.0]                    |0.0       |\n|[22598.60355651257,938.4220993796007,-23537.025655892172]   |[1.0,0.0,0.0]                    |0.0       |\n|[20524.55747106708,1750.139974552606,-22274.697445619684]   |[1.0,0.0,0.0]                    |0.0       |\n|[24369.33085563492,478.2263130917054,-24847.557168726624]   |[1.0,0.0,0.0]                    |0.0       |\n|[25629.52586174148,-192.40731255107312,-25437.11854919041]  |[1.0,0.0,0.0]                    |0.0       |\n|[29944.818224833067,-1936.767860186581,-28008.050364646493] |[1.0,0.0,0.0]                    |0.0       |\n|[25095.115980666546,110.99834659454791,-25206.114327261093] |[1.0,0.0,0.0]                    |0.0       |\n|[-18994.667253235268,12074.709651218403,6919.957602016859]  |[0.0,1.0,0.0]                    |1.0       |\n|[38919.06696252647,-5453.963471106039,-33465.10349142042]   |[1.0,0.0,0.0]                    |0.0       |\n|[29601.783587714817,-1697.1845083924927,-27904.599079322325]|[1.0,0.0,0.0]                    |0.0       |\n|[-14271.522512385294,11041.861803401871,3229.660708983418]  |[0.0,1.0,0.0]                    |1.0       |\n|[-41011.14350152455,17036.32945903473,23974.814042489823]   |[0.0,0.0,1.0]                    |2.0       |\n|[-27765.164694901094,17727.78535517628,10037.379339724806]  |[0.0,1.0,0.0]                    |1.0       |\n|[-24491.649758932126,13931.526474094646,10560.123284837473] |[0.0,1.0,0.0]                    |1.0       |\n|[-16548.06114507441,10139.917257827732,6408.143887246673]   |[0.0,1.0,0.0]                    |1.0       |\n|[-33260.53866611073,16446.572364085936,16813.966302024797]  |[0.0,2.7722990008802886E-160,1.0]|2.0       |\n|[-21666.087284218,13802.846783092147,7863.24050112584]      |[0.0,1.0,0.0]                    |1.0       |\n|[-31543.179893646557,16452.928101990834,15090.251791655724] |[0.0,1.0,0.0]                    |1.0       |\n|[-43236.84898013162,18023.80837865029,25213.040601481334]   |[0.0,0.0,1.0]                    |2.0       |\n+------------------------------------------------------------+---------------------------------+----------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590483257467_-186756936",
      "id": "paragraph_1590483257467_-186756936",
      "dateCreated": "2020-05-26T14:24:17+0530",
      "dateStarted": "2020-05-26T14:29:20+0530",
      "dateFinished": "2020-05-26T14:29:21+0530",
      "status": "FINISHED",
      "$$hashKey": "object:47188"
    },
    {
      "text": "// Inspect the rawPrediction and probability columns.\npredictions.select(\"rawPrediction\",\"probability\",\"prediction\")\n           .show(false)",
      "user": "anonymous",
      "dateUpdated": "2020-05-26T14:29:21+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+------------------------------------------------------------+---------------------------------+----------+\n|rawPrediction                                               |probability                      |prediction|\n+------------------------------------------------------------+---------------------------------+----------+\n|[25678.50533964567,132.90650347045448,-25811.411843116126]  |[1.0,0.0,0.0]                    |0.0       |\n|[20141.806983153703,1877.784589255676,-22019.591572409383]  |[1.0,0.0,0.0]                    |0.0       |\n|[22598.60355651257,938.4220993796007,-23537.025655892172]   |[1.0,0.0,0.0]                    |0.0       |\n|[20524.55747106708,1750.139974552606,-22274.697445619684]   |[1.0,0.0,0.0]                    |0.0       |\n|[24369.33085563492,478.2263130917054,-24847.557168726624]   |[1.0,0.0,0.0]                    |0.0       |\n|[25629.52586174148,-192.40731255107312,-25437.11854919041]  |[1.0,0.0,0.0]                    |0.0       |\n|[29944.818224833067,-1936.767860186581,-28008.050364646493] |[1.0,0.0,0.0]                    |0.0       |\n|[25095.115980666546,110.99834659454791,-25206.114327261093] |[1.0,0.0,0.0]                    |0.0       |\n|[-18994.667253235268,12074.709651218403,6919.957602016859]  |[0.0,1.0,0.0]                    |1.0       |\n|[38919.06696252647,-5453.963471106039,-33465.10349142042]   |[1.0,0.0,0.0]                    |0.0       |\n|[29601.783587714817,-1697.1845083924927,-27904.599079322325]|[1.0,0.0,0.0]                    |0.0       |\n|[-14271.522512385294,11041.861803401871,3229.660708983418]  |[0.0,1.0,0.0]                    |1.0       |\n|[-41011.14350152455,17036.32945903473,23974.814042489823]   |[0.0,0.0,1.0]                    |2.0       |\n|[-27765.164694901094,17727.78535517628,10037.379339724806]  |[0.0,1.0,0.0]                    |1.0       |\n|[-24491.649758932126,13931.526474094646,10560.123284837473] |[0.0,1.0,0.0]                    |1.0       |\n|[-16548.06114507441,10139.917257827732,6408.143887246673]   |[0.0,1.0,0.0]                    |1.0       |\n|[-33260.53866611073,16446.572364085936,16813.966302024797]  |[0.0,2.7722990008802886E-160,1.0]|2.0       |\n|[-21666.087284218,13802.846783092147,7863.24050112584]      |[0.0,1.0,0.0]                    |1.0       |\n|[-31543.179893646557,16452.928101990834,15090.251791655724] |[0.0,1.0,0.0]                    |1.0       |\n|[-43236.84898013162,18023.80837865029,25213.040601481334]   |[0.0,0.0,1.0]                    |2.0       |\n+------------------------------------------------------------+---------------------------------+----------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590483298491_-1641947955",
      "id": "paragraph_1590483298491_-1641947955",
      "dateCreated": "2020-05-26T14:24:58+0530",
      "dateStarted": "2020-05-26T14:29:21+0530",
      "dateFinished": "2020-05-26T14:29:21+0530",
      "status": "FINISHED",
      "$$hashKey": "object:47189"
    },
    {
      "text": "// Evaluate the model. Several evaluation metrics are available\n// for multiclass classification: f1 (default), accuracy,\n// weightedPrecision, and weightedRecall.\n// I discuss evaluation metrics in more detail in Chapter 2.\nimport org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\nval evaluator = new MulticlassClassificationEvaluator().setMetricName(\"f1\")\nval f1 = evaluator.evaluate(predictions)",
      "user": "anonymous",
      "dateUpdated": "2020-05-26T14:29:21+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\n\u001b[1m\u001b[34mevaluator\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\u001b[0m = mcEval_344987886331\n\u001b[1m\u001b[34mf1\u001b[0m: \u001b[1m\u001b[32mDouble\u001b[0m = 0.958119658119658\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590483439270_-1495444173",
      "id": "paragraph_1590483439270_-1495444173",
      "dateCreated": "2020-05-26T14:27:19+0530",
      "dateStarted": "2020-05-26T14:29:21+0530",
      "dateFinished": "2020-05-26T14:29:21+0530",
      "status": "FINISHED",
      "$$hashKey": "object:47190"
    },
    {
      "text": "val wp = evaluator.setMetricName(\"weightedPrecision\").evaluate(predictions)",
      "user": "anonymous",
      "dateUpdated": "2020-05-26T14:29:21+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mwp\u001b[0m: \u001b[1m\u001b[32mDouble\u001b[0m = 0.9635416666666667\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590483452112_900929797",
      "id": "paragraph_1590483452112_900929797",
      "dateCreated": "2020-05-26T14:27:32+0530",
      "dateStarted": "2020-05-26T14:29:21+0530",
      "dateFinished": "2020-05-26T14:29:21+0530",
      "status": "FINISHED",
      "$$hashKey": "object:47191"
    },
    {
      "text": "val wr = evaluator.setMetricName(\"weightedRecall\").evaluate(predictions)",
      "user": "anonymous",
      "dateUpdated": "2020-05-26T14:29:21+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mwr\u001b[0m: \u001b[1m\u001b[32mDouble\u001b[0m = 0.9583333333333335\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590483463334_-1388768652",
      "id": "paragraph_1590483463334_-1388768652",
      "dateCreated": "2020-05-26T14:27:43+0530",
      "dateStarted": "2020-05-26T14:29:21+0530",
      "dateFinished": "2020-05-26T14:29:22+0530",
      "status": "FINISHED",
      "$$hashKey": "object:47192"
    },
    {
      "text": "val accuracy = evaluator.setMetricName(\"accuracy\").evaluate(predictions)",
      "user": "anonymous",
      "dateUpdated": "2020-05-26T14:29:22+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34maccuracy\u001b[0m: \u001b[1m\u001b[32mDouble\u001b[0m = 0.9583333333333334\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590483480065_584813141",
      "id": "paragraph_1590483480065_584813141",
      "dateCreated": "2020-05-26T14:28:00+0530",
      "dateStarted": "2020-05-26T14:29:22+0530",
      "dateFinished": "2020-05-26T14:29:22+0530",
      "status": "FINISHED",
      "$$hashKey": "object:47193"
    },
    {
      "user": "anonymous",
      "dateUpdated": "2020-05-26T14:29:22+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590483491102_1117902403",
      "id": "paragraph_1590483491102_1117902403",
      "dateCreated": "2020-05-26T14:28:11+0530",
      "status": "FINISHED",
      "$$hashKey": "object:47194"
    }
  ],
  "name": "Logistic Regression",
  "id": "2FBFVYK3E",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0-preview1",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {},
  "path": "/Logistic Regression"
}